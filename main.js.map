{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/define property getters","webpack://my-webpack-project/webpack/runtime/hasOwnProperty shorthand","webpack://my-webpack-project/./src/toyData.ts","webpack://my-webpack-project/./src/views/pages/startPage.ts","webpack://my-webpack-project/./src/views/pages/treePage.ts","webpack://my-webpack-project/./src/views/components/header.ts","webpack://my-webpack-project/./src/views/pages/Error404.ts","webpack://my-webpack-project/./src/views/pages/ToyCard.ts","webpack://my-webpack-project/./src/services/sort.ts","webpack://my-webpack-project/./src/services/filter.ts","webpack://my-webpack-project/./src/services/cardsAnimation.ts","webpack://my-webpack-project/./src/views/pages/toyPage.ts","webpack://my-webpack-project/./src/services/rangeSlider.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/views/components/footer.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { IToyCard } from './views/pages/ToyCard';\n\nconst data: IToyCard[] = [\n    {\n        num: '1',\n        name: 'Большой шар с рисунком',\n        count: '2',\n        year: '1960',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '2',\n        name: 'Зелёный шар с цветами',\n        count: '5',\n        year: '2000',\n        shape: 'шар',\n        color: 'зелёный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '3',\n        name: 'Красный матовый шар',\n        count: '3',\n        year: '1990',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '4',\n        name: 'Сосулька красная',\n        count: '2',\n        year: '1980',\n        shape: 'фигурка',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '5',\n        name: 'Красный виноград',\n        count: '4',\n        year: '1980',\n        shape: 'фигурка',\n        color: 'красный',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '6',\n        name: 'Красный шар с рисунком',\n        count: '6',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '7',\n        name: 'Молочно-белый шар',\n        count: '12',\n        year: '1960',\n        shape: 'шар',\n        color: 'белый',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '8',\n        name: 'Красный шар',\n        count: '10',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '9',\n        name: 'Колокольчик старинный',\n        count: '2',\n        year: '1950',\n        shape: 'колокольчик',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '10',\n        name: 'Белый шар ретро',\n        count: '7',\n        year: '1960',\n        shape: 'шар',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '11',\n        name: 'Шишка еловая белая',\n        count: '11',\n        year: '1960',\n        shape: 'шишка',\n        color: 'белый',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '12',\n        name: 'Белый шар с цветами',\n        count: '5',\n        year: '1980',\n        shape: 'шар',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '13',\n        name: 'Шар расписной Река',\n        count: '3',\n        year: '1970',\n        shape: 'шар',\n        color: 'синий',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '14',\n        name: 'Шар расписной Деревня',\n        count: '4',\n        year: '1970',\n        shape: 'шар',\n        color: 'синий',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '15',\n        name: 'Колокольчик расписной',\n        count: '3',\n        year: '1970',\n        shape: 'колокольчик',\n        color: 'синий',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '16',\n        name: 'Шишка расписная Пейзаж',\n        count: '3',\n        year: '1970',\n        shape: 'шишка',\n        color: 'синий',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '17',\n        name: 'Шишка расписная',\n        count: '7',\n        year: '1970',\n        shape: 'шишка',\n        color: 'красный',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '18',\n        name: 'Желтый шар с бантом',\n        count: '2',\n        year: '2010',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '19',\n        name: 'Желтый шар с паетками',\n        count: '12',\n        year: '1980',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '20',\n        name: 'Красный шар с бантом',\n        count: '8',\n        year: '1950',\n        shape: 'шар',\n        color: 'красный',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '21',\n        name: 'Красный шар с звёздами',\n        count: '4',\n        year: '1970',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '22',\n        name: 'Шишка еловая золотая',\n        count: '11',\n        year: '1990',\n        shape: 'шишка',\n        color: 'желтый',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '23',\n        name: 'Колокольчик старинный',\n        count: '9',\n        year: '1950',\n        shape: 'колокольчик',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '24',\n        name: 'Снежинка изящная',\n        count: '1',\n        year: '1940',\n        shape: 'снежинка',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '25',\n        name: 'Розовый шар с блёстками',\n        count: '12',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '26',\n        name: 'Рубиново-золотой шар',\n        count: '8',\n        year: '1960',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '27',\n        name: 'Красный шар с узором',\n        count: '4',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '28',\n        name: 'Бордовый шар с узором',\n        count: '10',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '29',\n        name: 'Старинный шар с цветами',\n        count: '5',\n        year: '1950',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '30',\n        name: 'Старинный шар с узором',\n        count: '8',\n        year: '1950',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '31',\n        name: 'Красный шар с блёстками',\n        count: '8',\n        year: '2010',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '32',\n        name: 'Синий шар Вселенная',\n        count: '11',\n        year: '1970',\n        shape: 'шар',\n        color: 'синий',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '33',\n        name: 'Синий шар со снежинкой',\n        count: '6',\n        year: '2010',\n        shape: 'шар',\n        color: 'синий',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '34',\n        name: 'Зелёный  шар с узором',\n        count: '8',\n        year: '2010',\n        shape: 'шар',\n        color: 'зелёный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '35',\n        name: 'Фигурка Лис в шарфе',\n        count: '8',\n        year: '1950',\n        shape: 'фигурка',\n        color: 'желтый',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '36',\n        name: 'Сиреневый шар Метель',\n        count: '1',\n        year: '2000',\n        shape: 'шар',\n        color: 'синий',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '37',\n        name: 'Зелёный  шар Метель',\n        count: '6',\n        year: '2000',\n        shape: 'шар',\n        color: 'зелёный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '38',\n        name: 'Голубой  шар Метель',\n        count: '6',\n        year: '2000',\n        shape: 'шар',\n        color: 'синий',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '39',\n        name: 'Красная снежинка',\n        count: '6',\n        year: '1990',\n        shape: 'снежинка',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '40',\n        name: 'Снежинка золотая',\n        count: '12',\n        year: '2020',\n        shape: 'снежинка',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '41',\n        name: 'Снежинка арктическая',\n        count: '11',\n        year: '2020',\n        shape: 'снежинка',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '42',\n        name: 'Зелёный шар',\n        count: '10',\n        year: '1980',\n        shape: 'шар',\n        color: 'зелёный',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '43',\n        name: 'Снежинка двухцветная',\n        count: '6',\n        year: '1960',\n        shape: 'снежинка',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '44',\n        name: 'Фигурка Ангела',\n        count: '11',\n        year: '1940',\n        shape: 'фигурка',\n        color: 'красный',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '45',\n        name: 'Снежинка новогодняя',\n        count: '1',\n        year: '1980',\n        shape: 'снежинка',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '46',\n        name: 'Фигурка Мухомор',\n        count: '10',\n        year: '1950',\n        shape: 'фигурка',\n        color: 'красный',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '47',\n        name: 'Фигурка Колодец',\n        count: '6',\n        year: '1950',\n        shape: 'фигурка',\n        color: 'красный',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '48',\n        name: 'Желтый шар с бантом',\n        count: '6',\n        year: '1960',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '49',\n        name: 'Снежинка с бирюзой',\n        count: '4',\n        year: '1980',\n        shape: 'снежинка',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '50',\n        name: 'Колокольчик большой',\n        count: '3',\n        year: '2020',\n        shape: 'колокольчик',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '51',\n        name: 'Шишка с изморозью',\n        count: '12',\n        year: '1970',\n        shape: 'шишка',\n        color: 'красный',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '52',\n        name: 'Красный шар с надписью',\n        count: '12',\n        year: '1990',\n        shape: 'шар',\n        color: 'красный',\n        size: 'большой',\n        favorite: false,\n        lovest: true\n    },\n    {\n        num: '53',\n        name: 'Снежинка серебристая',\n        count: '6',\n        year: '2020',\n        shape: 'снежинка',\n        color: 'белый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '54',\n        name: 'Зелёный шар с рисунком',\n        count: '6',\n        year: '2010',\n        shape: 'шар',\n        color: 'зелёный',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '55',\n        name: 'Пряничный домик',\n        count: '1',\n        year: '1940',\n        shape: 'фигурка',\n        color: 'желтый',\n        size: 'большой',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '56',\n        name: 'Пряничный теремок',\n        count: '1',\n        year: '1940',\n        shape: 'фигурка',\n        color: 'желтый',\n        size: 'малый',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '57',\n        name: 'Пряничная избушка',\n        count: '1',\n        year: '1940',\n        shape: 'фигурка',\n        color: 'желтый',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '58',\n        name: 'Фигурка белого медведя',\n        count: '2',\n        year: '1980',\n        shape: 'фигурка',\n        color: 'белый',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '59',\n        name: 'Желтый шар с надписью',\n        count: '10',\n        year: '1990',\n        shape: 'шар',\n        color: 'желтый',\n        size: 'средний',\n        favorite: false,\n        lovest: false\n    },\n    {\n        num: '60',\n        name: 'Фигурка Голубь',\n        count: '12',\n        year: '1940',\n        shape: 'фигурка',\n        color: 'белый',\n        size: 'средний',\n        favorite: false,\n        lovest: true\n    },\n];\nexport { data };","import { PageRenderer } from './PageRenderer';\nimport { navToPage } from '../../index';\n\n\nlet StartPage: PageRenderer = {\n    render: async () => {\n        let view =  /*html*/`\n        <div class=\"page main-page\">\n            <div class=\"ball ball1\"></div>\n            <div class=\"ball ball2\"></div>\n            <h1 class=\"start-page-title\">\n            Новогодняя игра\n            <span>«Наряди ёлку»</span>\n            </h1>\n            <button id=\"start-button\" class=\"switch-start-page\" data-page=\"ToyPage\">\n                Начать\n            </button>\n        </div>\n        `\n        return view\n    },\n    after_render: async () => {\n        const button: HTMLElement = document.getElementById('start-button');\n        button.addEventListener('click', startButtonOnClick);\n\n        const search = document.getElementById('search');\n        search.style.opacity = '0';\n    }\n\n}\n\nfunction startButtonOnClick(e: Event) {\n    const elem = <HTMLElement>e.target;\n    const pagename: string = elem.dataset.page;\n    const ball1 = <HTMLElement>document.querySelector('.ball1');\n    ball1.style.marginTop = '-100vh';\n    ball1.style.transition = '.5s';\n    const ball2 = <HTMLElement>document.querySelector('.ball2');\n    ball2.style.marginTop = '-100vh';\n    ball2.style.transition = '.5s';\n    const heading = <HTMLElement>document.querySelector('.start-page-title');\n    heading.style.opacity = '0';\n    heading.style.transition = '.5s';\n    const button: HTMLElement = document.getElementById('start-button');\n    button.style.opacity = '0';\n    button.style.transition = '.5s';\n    setTimeout(navToPage, 500, pagename);\n};\n\nexport { StartPage, startButtonOnClick };","import { PageRenderer } from './PageRenderer'\nimport { data } from './../../toyData';\nimport { IToyCard } from './ToyCard'\n\nlet TreePage: PageRenderer = {\n    render: async () => {\n        let view =  /*html*/`\n         \n        <div class=\"page tree-page\">\n            <div class=\"blur blur-tree-page\">\n            <div class=\"tree-page-wrap\">\n                    <div class=\"left-setting\">\n                        <div class=\"music-snow-wrap\">\n                            <div class=\"music-wrap\">    \n                                <div class=\"music\">\n                                <audio class=\"audio\" loop></audio>\n                                </div>\n                                <select class=\"music-select\">\n                                    <option value=\"1\">Трек 1</option>\n                                    <option  value=\"2\">Трек 2</option>\n                                    <option value=\"3\">Трек 3</option>\n                                    <option value=\"4\">Трек 4</option>\n                                   \n                                </select>\n                            </div>\n                            <div class=\"snow\"></div>\n                        </div>\n\n                        <div class=\"tree-selection\">\n                            <p class=\"controls-title\">Выберите Ёлку</p>\n                            <div class=\"trees-wrap\">\n                                <div class=\"tree-icon\" data-number=\"1\"></div>\n                                <div class=\"tree-icon\" data-number=\"2\"></div>\n                                <div class=\"tree-icon\" data-number=\"3\"></div>\n                                <div class=\"tree-icon\" data-number=\"4\"></div>\n                                <div class=\"tree-icon\" data-number=\"5\"></div>\n                                <div class=\"tree-icon\" data-number=\"6\"></div>\n                            </div>\n                        </div>\n\n                        <div class=\"background-icon-wrap\">\n                            <p class=\"controls-title\">Выберите фон</p>\n                            <div class=\"background-icon-collection\"></div>                            \n                        </div>\n\n                        <div class=\"fairy-light-wrap\">\n                            <p class=\"controls-title\">Гирлянда</p>\n                            <div class=\"fairy-light\">\n                                <div class=\"fairy-light-white fairy-light-icon\" data-index=\"0\"></div>\n                                <div class=\"fairy-light-yellow fairy-light-icon\" data-index=\"1\"></div>\n                                <div class=\"fairy-light-red fairy-light-icon\" data-index=\"2\"></div>\n                                <div class=\"fairy-light-blue fairy-light-icon\" data-index=\"3\"></div>\n                                <div class=\"fairy-light-green fairy-light-icon\" data-index=\"4\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"game\">\n                        <div class=\"hidden-toy-set\"></div>\n                        <div class=\"tree-wrap\" id=\"game-wrap\"></div>\n                        <img class=\"fir-tree-img\" id=\"fir-tree-img\" usemap=\"#tree-map\">\n                         <div class=\"garland-tree-mask\">\n                            <div class=\"garland-tree-wrap\"></div>\n                         </div>\n                            <map name=\"tree-map\">\n                            <area  id=\"area\" data-drop-target=\"true\" coords=\"${treeSVG1}\" shape=\"poly\">\n                                </area>\n                            </map>\n                        \n                    </div>\n\n                    <div class=\"right-setting\">                        \n                        <div class=\"game-toy-set-wrap\">\n                            <p class=\"controls-title\">Игрушки</o>\n                            <div class=\"game-toy-set\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `\n        return view\n    },\n    after_render: async () => {\n        const search = document.getElementById('search');\n        search.style.opacity = '0';\n\n        const audioElem = <HTMLAudioElement>document.querySelector('.audio');\n        audioElem.src = `audio/audio-${currentAudioTrak}.mp3`;\n        const audioButton = <HTMLElement>document.querySelector('.music');\n        audioButton.addEventListener('click', audioOnClick);\n\n        const audioSelect = <HTMLInputElement>document.querySelector('.music-select');\n        audioSelect.onchange = selectTrackOnChange;\n\n        const snow = document.querySelector('.snow');\n        snow.addEventListener('click', addSnowOnClick);\n\n        currentToyImgCollection = [];\n        toyCountInfo = [];\n        let imgCollection: IToyCard[] = [];\n        for (let i = 0; i < data.length; i++) {\n            data[i].favorite ? imgCollection.push(data[i]) : false;\n        };\n        imgCollection.length > 0 ? currentToyImgCollection = imgCollection : false;\n\n        const firTreeIconCollection = document.querySelectorAll('.tree-icon');\n        for (let i = 0; i < firTreeIconCollection.length; i++) {\n            const elem = <HTMLLIElement>firTreeIconCollection[i];\n            const firTreeIconNumber = i + 1;\n            elem.onclick = changeFirTreeOnClick;\n            currentTreeImgNumber == firTreeIconNumber ? elem.style.backgroundColor = 'rgba(246, 254, 255, 0.8)' : false;\n\n        };\n\n        const backgroundCollectionWrap = <HTMLElement>document.querySelector('.background-icon-collection');\n        const backgroundCollectionNumber = 10;\n        for (let i = 0; i < backgroundCollectionNumber; i++) {\n            createDivBGCollection(backgroundCollectionWrap, 'background-icon', i);\n        };\n\n        const fairyLightIcons = document.querySelectorAll('.fairy-light-icon');\n        for (let index = 0; index < fairyLightIcons.length; index++) {\n            const elem = <HTMLLIElement>fairyLightIcons[index];\n            elem.addEventListener('click', addFairyLightOnClick)\n        };\n\n        const gameBg = document.getElementById('game-wrap');\n        gameBg.style.background = `url(bg/${currentBgImgNumber}.jpg)`\n\n        const toySet = <HTMLElement>document.querySelector('.game-toy-set');\n        const toySetNumber = 20;\n        for (let i = 0; i < toySetNumber; i++) {\n            createDivToyImgCollection(toySet, i, imgCollection);\n\n        };\n\n        const hiddenToy = <HTMLElement>document.querySelector('.hidden-toy-set');\n        const hiddenToySlotNum = data.length + 1;\n        for (let i = 0; i < hiddenToySlotNum; i++) {\n            createDivAllToyCollection(i, hiddenToy);\n        };\n\n        const firTreeImg = <HTMLImageElement>document.getElementById('fir-tree-img');\n        firTreeImg.src = `tree/${currentTreeImgNumber}.png`;\n\n        const treeContour = document.querySelector('area');\n        treeContour.addEventListener('dragover', imgDragOver);\n        treeContour.addEventListener('drop', imgDrop);\n\n        const toyImgSet = document.querySelectorAll('.toy-item-img');\n        for (let index = 0; index < toyImgSet.length; index++) {\n            const element = toyImgSet[index];\n            element.addEventListener('dragstart', imgOnDragStart);\n        }\n    }\n};\n\nlet currentBgImgNumber = 1;\nlet currentTreeImgNumber = 1;\nlet isHiddenFormOpen = false;\nlet currentToyImgCollection: IToyCard[] = [];\n\nfunction createDivBGCollection(parent: HTMLElement, newElemClass: string, i: number) {\n    const newElem = document.createElement('div');\n    newElem.classList.add(newElemClass);\n    let imgNumber = i + 1;\n    newElem.dataset.number = imgNumber.toString();\n    newElem.style.backgroundImage = `url(bg/${imgNumber}.jpg)`;\n    newElem.onclick = changeBgOnClick;\n    i == currentBgImgNumber - 1 ? newElem.style.opacity = '1' : false;\n    parent.append(newElem);\n};\ninterface IToyCountInfo {\n    toyNum: string;\n    toyCount: string;\n    currentToyCount: number;\n};\nlet toyCountInfo: IToyCountInfo[] = [];\nfunction createDivToyImgCollection(parent: HTMLElement, i: number, collection: IToyCard[]) {\n\n    const newElem = document.createElement('div');\n    const elemCount = document.createElement('div');\n    const elemImg = <HTMLImageElement>document.createElement('img');\n    elemImg.classList.add('toy-item-img');\n    elemImg.draggable = true;\n    elemImg.id = `imgToy${i}`;\n    elemCount.id = `imgToy${i}Count`;\n    elemImg.dataset.type = 'icon-toy-fav';\n\n\n    const imgNumber = i + 1;\n    if (collection.length == 0) {\n        elemImg.src = `toys/${imgNumber}.png`;\n        elemImg.dataset.number = data[i].num;\n        elemCount.textContent = data[i].count;\n        let toyCorntInfo: IToyCountInfo = {\n            toyNum: data[i].num,\n            toyCount: data[i].count,\n            currentToyCount: +data[i].count,\n        };\n        toyCountInfo.push(toyCorntInfo);\n        currentToyImgCollection.push(data[i]);\n    }\n    else {\n        if (collection.length > i) {\n            let satImgNum = collection[i].num;\n            \n            elemImg.dataset.number = satImgNum;\n            \n            elemImg.src = `toys/${satImgNum}.png`;\n            const imgIndex = +satImgNum - 1;\n            \n\n            elemCount.textContent = data[imgIndex].count;\n            let toyCorntInfo: IToyCountInfo = {\n                toyNum: data[imgIndex].num,\n                toyCount: data[imgIndex].count,\n                currentToyCount: +data[imgIndex].count,\n            };\n            toyCountInfo.push(toyCorntInfo);\n            elemImg.addEventListener('dragstart', imgOnDragStart);\n        }\n        else {\n            elemImg.src = `toys/ball.svg`;\n            elemImg.style.opacity = '0.2';\n            const p = document.createElement('p');\n            p.textContent = 'Добавить';\n            p.classList.add('img-hover-js');\n            newElem.onmouseover = () => {\n                if (!isHiddenFormOpen) {\n                    elemImg.style.opacity = '0.5';\n                    elemImg.style.transition = '.5s';\n                    newElem.append(p);\n                }\n            };\n\n            newElem.onmouseout = () => {\n                elemImg.style.opacity = '0.2';\n                elemImg.style.transition = '.5s';\n                p.remove();\n\n            };\n\n            elemImg.onclick = unHiddenAllToyCollection;\n\n            function dragEnter(ev: DragEvent) {\n                ev.preventDefault();\n                return true;\n            }\n            function dragOver(ev: DragEvent) {\n                ev.preventDefault();\n            }\n        }\n    };\n\n    newElem.classList.add('toy-item');\n    elemCount.classList.add('item-count');\n    newElem.append(elemImg, elemCount);\n    parent.append(newElem);\n};\n\nfunction createDivAllToyCollection(imgIndex: number, parent: HTMLElement) {\n\n    const newElem = document.createElement('div');\n    const elemCount = document.createElement('div');\n    const elemImg = <HTMLImageElement>document.createElement('img');\n    elemImg.classList.add('toy-item-img');\n    if (imgIndex == data.length) {\n        newElem.classList.add('last-toy-item');\n\n        const closeButton = document.createElement('button');\n        closeButton.classList.add('hidden-toy-set-buttpn');\n        closeButton.textContent = 'Закрыть окно';\n        closeButton.onclick = unHiddenAllToyCollection;\n\n        const addItrmToSlotButton = document.createElement('button');\n        addItrmToSlotButton.classList.add('hidden-toy-set-buttpn');\n        addItrmToSlotButton.textContent = 'Добавить в слот';\n        newElem.append(addItrmToSlotButton, closeButton);\n    }\n    else {\n        if (!data[imgIndex].favorite) {\n            elemImg.src = `toys/${data[imgIndex].num}.png`;\n            elemCount.textContent = data[imgIndex].count;\n        }\n        else {\n            elemImg.style.opacity = '0.2';\n            elemImg.src = `toys/ball.svg`;\n        };\n        newElem.classList.add('toy-item');\n        elemCount.classList.add('item-count');\n        newElem.append(elemCount, elemImg);\n    };\n\n    parent.append(newElem);\n};\n\nfunction changeFirTreeOnClick(e: Event) {\n    const firTreeIconCollrction = document.querySelectorAll('.tree-icon');\n    for (let i = 0; i < firTreeIconCollrction.length; i++) {\n        const elem = <HTMLImageElement>firTreeIconCollrction[i];\n        elem.removeAttribute('style');\n    };\n\n    const elem = <HTMLLIElement>e.target;\n    const elemNumber = elem.dataset.number;\n    const firTreeImg = <HTMLImageElement>document.getElementById('fir-tree-img');\n    firTreeImg.src = `tree/${elemNumber}.png`;\n    elem.style.backgroundColor = 'rgba(246, 254, 255, 0.8)';\n    currentTreeImgNumber = +elemNumber;\n};\n\nfunction changeBgOnClick(e: Event) {\n    const bgCollection = document.querySelectorAll('.background-icon');\n    for (let j = 0; j < bgCollection.length; j++) {\n        const elem = <HTMLLIElement>bgCollection[j];\n        elem.style.opacity = '.7';\n    }\n\n    const elem = <HTMLElement>e.target;\n    const bgNumber = elem.dataset.number;\n    currentBgImgNumber = +bgNumber;\n    const treeBg = <HTMLImageElement>document.getElementById('game-wrap');\n\n    treeBg.style.backgroundImage = `url(bg/${bgNumber}.jpg)`;\n\n    elem.style.opacity = '1';\n};\n\nfunction unHiddenAllToyCollection() {\n    const hidden = <HTMLElement>document.querySelector('.hidden-toy-set');\n    if (isHiddenFormOpen) {\n        hidden.style.marginTop = '-170vh';\n        isHiddenFormOpen = false;\n    }\n    else {\n        hidden.style.marginTop = '0';\n        isHiddenFormOpen = true;\n    }\n};\n\n\nlet isAudioPlay = false;\nlet currentAudioTrak = '1';\nfunction audioOnClick(e: Event) {\n    const elem = <HTMLBRElement>e.target;\n    const audioElem = <HTMLAudioElement>document.querySelector('.audio');\n\n    if (!isAudioPlay) {\n        audioElem.play();\n        elem.style.opacity = '1';\n        isAudioPlay = true;\n    }\n    else {\n        audioElem.pause();\n        elem.style.opacity = '.5';\n        isAudioPlay = false;\n    };\n};\n\nfunction selectTrackOnChange(e: Event) {\n    const audioElem = <HTMLAudioElement>document.querySelector('.audio');\n    const audioButton = <HTMLElement>document.querySelector('.music');\n\n    const elem = <HTMLInputElement>e.target;\n    const elemValue = elem.value;\n\n    switch (elemValue) {\n        case '1':\n            currentAudioTrak = '1';\n            break;\n        case '2':\n            currentAudioTrak = '2';\n            break;\n        case '3':\n            currentAudioTrak = '3';\n            break;\n        case '4':\n            currentAudioTrak = '4';\n            break;\n    };\n    audioElem.src = `audio/audio-${currentAudioTrak}.mp3`;\n    isAudioPlay ? audioElem.play() : false;\n};\n\nconst treeSVG1 = `365,699,189,706,113,683,31,608,2,555,2,539,18,437,73,351,106,224,161,134,243,-1,306,75,353,144,399,221,424,359,452,459,496,550,444,664`;\n\nfunction createSnowFlake(zIndex: string) {\n    const game = document.querySelector('.game');\n    const snowFrameWidth = 740;\n    const snow_flake = document.createElement('div');\n    snow_flake.classList.add('fa-snowflake');\n    snow_flake.style.left = Math.random() * snowFrameWidth + 'px';\n    // between 3 - 10 seconds\n    const animationDurationTime = Math.random() * 7 + 3;\n    snow_flake.style.animationDuration = `${animationDurationTime}s`;\n    snow_flake.style.opacity = `${Math.random()}`;\n    const widthHightSnow = Math.random() * 10 + 10;\n    snow_flake.style.width = `${widthHightSnow}px`;\n    snow_flake.style.height = `${widthHightSnow}px`;\n    snow_flake.style.zIndex = zIndex;\n    //snow_flake.style.animation = 'rotate 3s infinite linear';\n\n    game.append(snow_flake);\n\n    setTimeout(() => {\n        snow_flake.remove();\n    }, (animationDurationTime*1000));\n};\n\nlet isSnowDown = false;\nlet id1: number;\nlet id2: number;\n\nfunction addSnowOnClick(e: Event) {\n    const elem = <HTMLLIElement>e.target;\n\n    if (!isSnowDown) {\n        elem.style.opacity = '1';\n        let snowSetInterval1 = setInterval(createSnowFlake, 50, 1);\n        id1 = snowSetInterval1;\n        let snowSetInterval2 = setInterval(createSnowFlake, 50, 99);\n        id2 = snowSetInterval2;\n        isSnowDown = true;\n    }\n    else {\n        elem.style.opacity = '.5';\n        clearTimeout(id1);\n        clearTimeout(id2);\n        const snowflake = document.querySelectorAll('.fa-snowflake');\n        for (let i = 0; i < snowflake.length; i++) {\n            const elem = <HTMLLIElement>snowflake[i];\n            elem.style.opacity = '0';\n            elem.style.transition = '.3';\n            setTimeout(() => { elem.remove() }, 350);\n        }\n        isSnowDown = false;\n    };\n\n};\n\ninterface IColorFairyLight {\n    color: string;\n    isOn: boolean;\n    colorValue: string;\n};\n\nlet colorFairyLight: IColorFairyLight[] = [\n    {\n        color: 'white',\n        isOn: false,\n        colorValue: 'white'\n    },\n    {\n        color: 'yellow',\n        isOn: false,\n        colorValue: 'yellow'\n    },\n    {\n        color: 'red',\n        isOn: false,\n        colorValue: 'red'\n    },\n    {\n        color: 'blue',\n        isOn: false,\n        colorValue: 'rgb(199, 199, 250)'\n    },\n    {\n        color: 'green',\n        isOn: false,\n        colorValue: '#ABFF00'\n    },\n];\n\nfunction addFairyLightOnTree(count: number, radiusLine: number, color: IColorFairyLight[]) {\n    //контейнер\n    const firTree = document.querySelector('.garland-tree-wrap');\n    // линия гирляднды\n    const fairyLightLine = document.createElement('ul');\n    fairyLightLine.classList.add('fairy-light-line');\n\n    //количество шариков\n    const itemCount = count;\n    // const mmarginTop = 30;\n    const radius = radiusLine;\n    // центр окружности\n    const xCenter = 0;\n    const yCenter = 0;\n\n    let colorSet = [];\n    for (let index = 0; index < color.length; index++) {\n        color[index].isOn ? colorSet.push(color[index].color) : false;\n    };\n\n    // вешаеи шарики на дугу\n    for (let index = 0; index < itemCount; index++) {\n        const fairyLight = document.createElement('li');\n        fairyLight.classList.add('fairy-light-in-garland');\n\n        //высчитываем радианы\n        let radian = ((Math.PI / 2) * (index / itemCount)) - Math.PI / 5;\n\n        let x = xCenter + radius * Math.cos(radian);\n        let y = yCenter + radius * Math.sin(radian);\n\n        fairyLight.style.marginTop = `${x}px`;\n        fairyLight.style.marginLeft = `${y}px`;\n        let lightTime = (Math.random() * 2) + 0.5;\n\n        switch (colorSet.length.toString()) {\n            case '1':\n                const oneColor = colorSet[0];\n                fairyLight.style.animation = `fairy-${oneColor} ${lightTime}s infinite linear`;\n                break;\n            case '2':\n                let twoColor: string;\n                index % 2 == 0 ? twoColor = colorSet[0] : twoColor = colorSet[1];\n                fairyLight.style.animation = `fairy-${twoColor} ${lightTime}s infinite linear`;\n                break;\n            case '3':\n                let random3 = Math.floor(Math.random() * 10 / 4);\n                let threeColor = colorSet[random3];\n                fairyLight.style.animation = `fairy-${threeColor} ${lightTime}s infinite linear`;\n                break;\n            case '4':\n                let random4 = Math.floor(Math.random() * 10 / 3);\n                let foorColor = colorSet[random4];\n                fairyLight.style.animation = `fairy-${foorColor} ${lightTime}s infinite linear`;\n                break;\n            case '5':\n                let random5 = Math.floor(Math.random() * 10 / 2.5);\n                let fiveColor = colorSet[random5];\n                fairyLight.style.animation = `fairy-${fiveColor} ${lightTime}s infinite linear`;\n                break;\n        };\n        fairyLightLine.append(fairyLight);\n    }\n\n    firTree.append(fairyLightLine);\n};\n\nfunction addFairyLightOnClick(e: Event) {\n    const remuvElem = document.querySelectorAll('.fairy-light-line');\n    for (let index = 0; index < remuvElem.length; index++) {\n        const elem = remuvElem[index];\n        elem.remove();\n    };\n\n    const elem = <HTMLLIElement>e.target;\n    const elemIndex = +elem.dataset.index;\n\n    if (!colorFairyLight[elemIndex].isOn) {\n        const color = colorFairyLight[elemIndex].colorValue;\n        elem.style.background = `radial-gradient(circle closest-side at 50% 50%, ${color} 40%, #000 120%)`;\n        colorFairyLight[elemIndex].isOn = true;\n\n        const fairyLightLineCount = 7;\n        for (let index = 0; index < fairyLightLineCount; index++) {\n            const fairyLightCount = 6;\n            const fairyLightLineMargin = ((index + 1) * 60 + (index + 1) * 40);\n            addFairyLightOnTree(((index + 1) * fairyLightCount), fairyLightLineMargin, colorFairyLight);\n        };\n    }\n    else {\n        // выкл стиль иконкт и стывим флаг\n        colorFairyLight[elemIndex].isOn = false;\n        elem.removeAttribute('style');\n\n        //проверяем вкл ли еще элементы\n        let isFairyLightOn = false;\n        for (let index = 0; index < colorFairyLight.length; index++) {\n            colorFairyLight[index].isOn ? isFairyLightOn = true : false;\n        };\n        if (isFairyLightOn) {\n            const fairyLightLineCount = 7;\n            for (let index = 0; index < fairyLightLineCount; index++) {\n                const fairyLightCount = 6;\n                const fairyLightLineMargin = ((index + 1) * 60 + (index + 1) * 40);\n                addFairyLightOnTree(((index + 1) * fairyLightCount), fairyLightLineMargin, colorFairyLight);\n            };\n        }\n    }\n};\n\nfunction resetSetting() {\n    if (isSnowDown) {\n        const snowIcon = <HTMLLIElement>document.querySelector('.snow');\n        snowIcon.style.opacity = '.5';\n        clearTimeout(id1);\n        clearTimeout(id2);\n        const snowflake = document.querySelectorAll('.fa-snowflake');\n        for (let i = 0; i < snowflake.length; i++) {\n            const elem = <HTMLLIElement>snowflake[i];\n            elem.style.opacity = '0';\n            elem.style.transition = '.3';\n            setTimeout(() => { elem.remove() }, 350);\n        }\n        isSnowDown = false;\n    };\n\n    if (isAudioPlay) {\n        const audioElem = <HTMLAudioElement>document.querySelector('.audio');\n        const audioIcon = <HTMLElement>document.querySelector('.music');\n        audioElem.pause();\n        audioIcon.style.opacity = '.5';\n        isAudioPlay = false;\n    };\n};\n\nfunction imgOnDragStart(ev: DragEvent) {\n    const targetElem = <HTMLElement>ev.target;\n    ev.dataTransfer.effectAllowed = 'move';\n    ev.dataTransfer.setData('DragImgSrc', targetElem.getAttribute('src'));\n    ev.dataTransfer.setData('DragImgId', targetElem.getAttribute('id'));\n    return true;\n};\n\nfunction imgDragOver(e: DragEvent) {\n    e.preventDefault();\n    // console.log(e);\n};\n\nlet currentImgZIndex = 5;\nlet imgTreeId = 0;\nfunction checkToyQuantity(countInfoArr: IToyCountInfo[], imgNum: string, countElem: HTMLElement, img: HTMLElement) {\n    for (let index = 0; index < countInfoArr.length; index++) {\n        const checkedElem = countInfoArr[index];\n        if (checkedElem.toyNum == imgNum) {\n            if (+checkedElem.currentToyCount == 0) {\n                img.style.opacity = '0.5';\n                img.style.transition = '1s';\n                return true;\n            }\n            else if (+checkedElem.currentToyCount == 1) {\n                img.style.opacity = '0.3';\n                img.style.transition = '1s';\n                checkedElem.currentToyCount--;\n                countElem.textContent = checkedElem.currentToyCount.toString();\n                return false;\n            }\n            else {\n                checkedElem.currentToyCount--;\n                countElem.textContent = checkedElem.currentToyCount.toString();\n                return false;\n            }\n        }\n    }\n};\n\nfunction imgDrop(e: DragEvent) {\n    console.log('toyCountInfo');\n    console.log(toyCountInfo);\n    console.log('currentToyImgCollection');\n    console.log(currentToyImgCollection);\n    e.preventDefault();\n    const area = <HTMLLIElement>e.target;\n    const dragImgSrc = e.dataTransfer.getData(\"DragImgSrc\");\n\n    const dragImgId = e.dataTransfer.getData(\"DragImgId\");\n\n    const dragElem = <HTMLLIElement>document.getElementById(dragImgId);\n    const toyType = dragElem.dataset.type;\n    const toyNumber = dragElem.dataset.number;\n\n    const imgWidth = 60;\n    let elemmarginLeft = +e.offsetX - imgWidth / 2;\n    let elemmarginTop = +e.offsetY - imgWidth / 2;\n\n    if (area.id == 'area') {\n        if (toyType == 'icon-toy-fav') {\n            const srcImgCount = document.getElementById(`${dragImgId}Count`);\n            let isCountNull = checkToyQuantity(toyCountInfo, toyNumber, srcImgCount, dragElem);\n\n            if (!isCountNull) {\n                const distImg = document.createElement('img');\n                distImg.classList.add('firtree-toy-img');\n                distImg.dataset.type = 'toy-on-tree';\n                distImg.id = `treeToy${imgTreeId}`;\n                imgTreeId++;\n                distImg.src = dragImgSrc;\n                distImg.style.zIndex = `${currentImgZIndex}`;\n                currentImgZIndex++;\n\n                distImg.style.left = elemmarginLeft + 'px';\n                distImg.style.top = elemmarginTop + 'px';\n\n                area.append(distImg);\n                distImg.addEventListener('dragstart', imgOnDragStart);\n            }\n            else {\n                alert('Этот вид игрушек закончился');\n            }\n        }\n\n        else {\n            dragElem.style.left = elemmarginLeft + 'px';\n            dragElem.style.top = elemmarginTop + 'px';\n\n        };\n    };\n};\n\nexport { TreePage, resetSetting };","import { PageRenderer } from './../pages/PageRenderer'\nimport { data } from './../../toyData';\nimport { navToPage, currentPage } from '../../index';\nimport { startButtonOnClick } from './../pages/startPage';\nimport { resetSetting } from './../pages/treePage';\n\nlet Header: PageRenderer = {\n    render: async () => {\n        let view =  /*html*/`\n         <div class=\"header-wrap\">\n            <nav class=\"nav-bar\">\n                <a class=\"logo\" id=\"logo\" data-page=\"StartPage\"></a>\n                <a class=\"toy\" id=\"toy\" data-page=\"ToyPage\">Игрушки</a>\n                <a class=\"fir-tree\" id=\"fir-tree\" data-page=\"TreePage\">Ёлка</a>\n            </nav>\n            <div class=\"header-controls\">\n            <input type=\"search\" id=\"search\" class=\"search\" autocomplete=\"off\" autofocus placeholder=\"Введите запрос\">\n            <div class=\"select\">\n                <span id=\"favorite-toy-count\"></span>\n            </div>\n            </div>\n         </div>\n        `\n        return view\n    },\n    after_render: async () => {\n        let favoriteCount: number = 0;\n        for (let i = 0; i < data.length; i++) {\n            data[i].favorite ? favoriteCount++ : false;\n        };\n        const favoriteCountELem = <HTMLLIElement>document.getElementById('favorite-toy-count');\n        favoriteCountELem.textContent = favoriteCount.toString();\n\n        const logo = document.getElementById('logo');\n        logo.addEventListener('click', navToPageOnClick);\n        const toy = document.getElementById('toy');\n        toy.addEventListener('click', navToPageOnClick);\n        const firTree = document.getElementById('fir-tree');\n        firTree.addEventListener('click', navToPageOnClick);\n    }\n\n}\n\nfunction navToPageOnClick(e: Event) {\n    const elem = <HTMLElement>e.target;\n    const page = elem.dataset.page;\n    switch (currentPage) {\n        case 'StartPage':\n            startButtonOnClick(e);\n            break;\n        case 'TreePage':\n            resetSetting();\n            const blur2 = <HTMLElement>document.querySelector('.blur');\n            blur2.style.opacity = '0';\n            blur2.style.transition = '.5s';\n            setTimeout(navToPage, 500, page);\n            break;\n        case 'ToyPage':\n            const blur = <HTMLElement>document.querySelector('.blur');\n            blur.style.opacity = '0';\n            blur.style.transition = '.5s';\n            setTimeout(navToPage, 500, page);\n            break;\n    };\n};\n\nexport { Header };","import { PageRenderer } from './PageRenderer'\n\nlet Error404: PageRenderer = {\n    render: async () => {\n        let view =  /*html*/`\n            <section class=\"error404\">\n                <h1> 404 Error </h1>\n            </section>\n        `\n        return view\n    },\n    after_render: async () => {\n    }\n}\n\nexport { Error404 };","import { addToFavoriteOnClick } from './toyPage';\n\ninterface IToyCard {\n    num: string;\n    name: string;\n    count: string;\n    year: string;\n    shape: string;\n    color: string;\n    size: string;\n    favorite: boolean;\n    lovest: boolean;\n};\n\nclass ToyCard {\n    num: string;\n    name: string;\n    count: string;\n    year: string;\n    shape: string;\n    color: string;\n    size: string;\n    favorite: boolean;\n    lovest: boolean;\n    \n    constructor(num: string, name: string, count: string, year: string, shape: string, color: string, size: string, favorite: boolean, lovest: boolean) {\n        this.num = num;\n        this.name = name;\n        this.count = count;\n        this.year = year;\n        this.shape = shape;\n        this.color = color;\n        this.size = size;\n        this.favorite = favorite;\n        this.lovest = lovest;\n    }\n\n    createCard() {\n        const perant = document.querySelector('.toy-card-container');\n        const card = document.createElement('div');\n        this.lovest ? card.classList.add('toy-card', 'toy-card-lovest') : card.classList.add('toy-card');\n        card.dataset.num = this.num;\n        card.style.opacity = '0';\n        //this.favorite ? card.style.backgroundColor = 'rgba(31, 112, 127, .6)' : this.favorite = false;\n        \n\n        const heading = document.createElement('h2');\n        heading.classList.add('toy-card-title');\n        heading.textContent = this.name;\n        \n        const cardImg = document.createElement('img');\n        cardImg.classList.add('toy-card-img');\n        cardImg.src = `toys/${this.num}.png`;\n        cardImg.alt = this.name;\n        cardImg.dataset.number = this.num;\n        cardImg.onclick = addToFavoriteOnClick;\n\n        const cardDescription = document.createElement('div');\n        cardDescription.classList.add('toy-card-description');\n            \n        const count = this.addDescriptionP('count', 'Количество:', this.count);\n        const year = this.addDescriptionP('year', 'Год покупки:', this.year);\n        const shape = this.addDescriptionP('shape', 'Форма:', this.shape);\n        const color = this.addDescriptionP('color', 'Цвет:', this.color);\n        const size = this.addDescriptionP('size', 'Размер:', this.size);\n        const isLovest: boolean = this.lovest;\n        let isLovestString: string = '';\n        isLovest === true ? isLovestString = 'да' : isLovestString = 'нет';\n        const lovest = this.addDescriptionP('favorite', 'Любимая:', isLovestString);\n        lovest.id = `lovest${this.num}`;\n\n        cardDescription.append(count, year, shape, color, size, lovest);\n\n        const ribbon = document.createElement('div');\n        ribbon.id = `ribbon${this.num}`\n        this.favorite ? ribbon.classList.add('ribbon-favorite') : ribbon.classList.add('ribbon');\n        const favoriteBall = document.createElement('div');\n        favoriteBall.classList.add('ribbon-favorite-ball');\n        this.favorite ? ribbon.append(favoriteBall) : this.favorite = false;\n\n        card.append(heading, cardImg, cardDescription, ribbon);\n        perant.append(card);\n    }\n\n    addDescriptionP(className: string, content: string, value: string) {\n        const elem = document.createElement('p');\n        elem.classList.add(`${className}`);\n        elem.textContent = content;\n        const span = document.createElement('span');\n        elem.append(span);\n        span.textContent = value;\n        return elem;\n    }\n};\n\nexport { ToyCard, IToyCard };","import { IToyCard } from \"../views/pages/ToyCard\";\n\nclass ToyCardsSort  {\n    cardArray: IToyCard[];\n    constructor(cardArray: IToyCard[]) {\n        this.cardArray = cardArray;\n    }\n\n    sortAtoZ() {\n        this.cardArray.sort((a, b) => {\n            if (a.name > b.name) {\n                return 1;\n            }\n            if (a.name < b.name) {\n                return -1;\n            }\n            // a должно быть равным b\n            return 0;\n        });\n    }\n    sortZtoA() {\n        this.cardArray.sort((a, b) => {\n            if (a.name > b.name) {\n                return -1;\n            }\n            if (a.name < b.name) {\n                return 1;\n            }\n            // a должно быть равным b\n            return 0;\n        });\n    }\n\n    sortYearMax() {\n        this.cardArray.sort((a, b) => {\n            return +a.year - +b.year;\n        });\n    }\n\n    sortYearMin() {\n        this.cardArray.sort((a, b) => {\n            return +b.year - +a.year;\n        });\n    }\n\n    // whatSort(value: string) {\n    //     value == 'sort-name-min' ? this.sortZtoA() :\n    //         value == 'sort-name-max' ? this.sortZtoA() :\n    //             value == 'sort-year-max' ? this.sortYearMax() :\n    //                 value == 'sort-year-min' ? this.sortYearMin() : false;\n    // }     \n    \n};\n\nexport { ToyCardsSort }","import { IToyCard } from \"../views/pages/ToyCard\";\nimport { openAbsentToyPopUpOn } from '../views/pages/toyPage';\ninterface IFilterShape {\n    shape: string;\n    isOn: boolean;\n};\ninterface IFilterColor {\n    color: string;\n    isOn: boolean;\n};\ninterface IFilterSize {\n    size: string;\n    isOn: boolean;\n};\n\nclass ToyCardsFilter {\n    cardArray: IToyCard[];\n    filterCardArr: IToyCard[];\n    filterShapeFlagArr: IFilterShape[];\n    filterColorArr: IFilterColor[];\n    filterSizeArr: IFilterSize[];\n    filterFavorite: boolean;\n    filterLovest: boolean;\n    filterCountStart: number;\n    filterCountEnd: number;\n    filterYearStart: number;\n    filterYearEnd: number;\n\n    constructor(cardArray: IToyCard[], filterShapeFlagArr: IFilterShape[], filterColorArr: IFilterColor[],\n        filterSizeArr: IFilterSize[], filterFavorite: boolean, filterLovest: boolean, filterCountStart: number, filterCountEnd: number,\n        filterYearStart: number, filterYearEnd: number) {\n        this.cardArray = cardArray;\n        this.filterShapeFlagArr = filterShapeFlagArr;\n        this.filterColorArr = filterColorArr;\n        this.filterSizeArr = filterSizeArr;\n        this.filterFavorite = filterFavorite;\n        this.filterLovest = filterLovest;\n        this.filterCountStart = filterCountStart;\n        this.filterCountEnd = filterCountEnd;\n        this.filterYearStart = filterYearStart;\n        this.filterYearEnd = filterYearEnd;\n        this.filterCardArr = [];\n    }\n\n    filterAddShapeFlag(value: HTMLElement) {\n        const sortType = value.dataset.filter;\n\n        for (let i = 0; i < this.filterShapeFlagArr.length; i++) {\n            if (this.filterShapeFlagArr[i].shape == sortType) {\n                if (this.filterShapeFlagArr[i].isOn == false) {\n                    this.filterShapeFlagArr[i].isOn = true;\n                    value.style.filter = 'invert(57%) sepia(100%) saturate(329%) hue-rotate(141deg) brightness(89%) contrast(90%)';\n                }\n                else if (this.filterShapeFlagArr[i].isOn == true) {\n                    value.removeAttribute('style');\n                    this.filterShapeFlagArr[i].isOn = false;\n                }\n            }\n        }\n    }\n\n    filterAddColorFlag(value: HTMLElement) {\n        const sortType = value.dataset.filter;\n\n        for (let i = 0; i < this.filterColorArr.length; i++) {\n            if (this.filterColorArr[i].color == sortType) {\n                if (this.filterColorArr[i].isOn == false) {\n                    this.filterColorArr[i].isOn = true;\n                    value.style.outline = '2px  solid wheat';\n                }\n                else if (this.filterColorArr[i].isOn == true) {\n                    value.removeAttribute('style');\n                    this.filterColorArr[i].isOn = false;\n                }\n            }\n        }\n    }\n\n    filterAddSizeFlag(value: HTMLElement) {\n        const sortType = value.dataset.filter;\n\n        for (let i = 0; i < this.filterSizeArr.length; i++) {\n            if (this.filterSizeArr[i].size == sortType) {\n                if (this.filterSizeArr[i].isOn == false) {\n                    this.filterSizeArr[i].isOn = true;\n                    value.style.filter = 'invert(57%) sepia(100%) saturate(329%) hue-rotate(141deg) brightness(89%) contrast(90%)';\n                }\n                else if (this.filterSizeArr[i].isOn == true) {\n                    value.removeAttribute('style');\n                    this.filterSizeArr[i].isOn = false;\n                }\n            }\n        }\n    }\n    // создаю массив, в котором прописаны все условия фильтрации\n    createFilterArr(shapeFlag: IFilterShape[], colorFlag: IFilterColor[], sizeFlag: IFilterSize[], isFavorite: boolean, isLovest: boolean, countStartValue: number,\n        countEndValue: number, yearStartValue: number, yearEndValue: number) {\n        //добавляем выделенные в фильтрах свойства, например форма -- шар, цвет --красный и т.д\n        let filterShapes: string[] = [];\n        let filterColors: string[] = [];\n        let filterSizes: string[] = [];\n       \n        for (let i = 0; i < shapeFlag.length; i++) {\n            shapeFlag[i].isOn ? filterShapes.push(shapeFlag[i].shape) : false\n        };\n        for (let i = 0; i < colorFlag.length; i++) {\n            colorFlag[i].isOn ? filterColors.push(colorFlag[i].color) : false\n        };\n        for (let i = 0; i < sizeFlag.length; i++) {\n            sizeFlag[i].isOn ? filterSizes.push(sizeFlag[i].size) : false\n        };\n        //создаем новый  массив из элементов подпадающих под фильтры\n        let arr: IToyCard[] = this.cardArray.filter(elem => this.isTrueCard(elem, filterShapes, filterColors, filterSizes, isFavorite, isLovest,\n            countStartValue, countEndValue, yearStartValue, yearEndValue));\n\n        if ((filterShapes.length != 0 || filterColors.length != 0 || filterSizes.length != 0 || isFavorite || isLovest) && arr.length == 0) {\n            openAbsentToyPopUpOn('Извините, совпадений не обнаружено', '');\n        }\n        \n        else {\n            this.filterCardArr = arr;\n        }\n\n    }\n\n    // функция для отработки фильтрации\n    isTrueCard(elem: IToyCard, filterArr1: string[], filterArr2: string[], filterArr3: string[], favorit: boolean, lovest: boolean,\n        fCountStart: number, fCountEnd: number, fYearStart: number, fYearEnd: number) {\n        //проверка, имеет ли кейс совпаление\n        let isShapeTrue = false;\n        let isColorTrue = false;\n        let isSizeTrue = false;\n        let isFavoriteTrue = false;\n        let isLovestTrue = false;\n        let isCountTrue = false;\n        let isYearTrue = false;\n        if (!lovest || elem.lovest) {\n            isLovestTrue = true\n        }\n\n        if (!favorit || elem.favorite) {\n            isFavoriteTrue = true;\n        }\n\n        //если в фильтре нет условий, то любое условие правда\n        if (filterArr1.length == 0) {\n            isShapeTrue = true\n        }\n        //если в фильтре есть условия, проверяем есть ли они у карточки\n        else {\n            for (let i = 0; i < filterArr1.length; i++) {\n                elem.shape == filterArr1[i] ? isShapeTrue = true : false\n            }\n        };\n        if (filterArr2.length == 0) {\n            isColorTrue = true\n        }\n        else {\n            for (let i = 0; i < filterArr2.length; i++) {\n                elem.color == filterArr2[i] ? isColorTrue = true : false\n            }\n        }\n        if (filterArr3.length == 0) {\n            isSizeTrue = true\n        }\n        else {\n            for (let i = 0; i < filterArr3.length; i++) {\n                elem.size == filterArr3[i] ? isSizeTrue = true : false\n            }\n        }\n\n        let elemCount: number = +elem.count;\n        if (elemCount >= fCountStart && elemCount <= fCountEnd) {\n            isCountTrue = true;\n        }\n        let elemYear: number = +elem.year;\n        if (elemYear >= fYearStart && elemYear <= fYearEnd) {\n            isYearTrue = true;\n        }\n\n        if (isShapeTrue && isColorTrue && isSizeTrue && isFavoriteTrue && isLovestTrue && isCountTrue && isYearTrue) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\nexport { ToyCardsFilter, IFilterShape, IFilterColor, IFilterSize };","\nfunction cardAnimationOf() {\n    const currentCards = document.querySelectorAll('.toy-card');\n    let windowWidth = document.body.clientWidth;\n    for (let i = 0; i < currentCards.length; i++) {\n        const card = <HTMLElement>currentCards[i];\n        card.style.animationName = 'hlop';\n        setTimeout(() => {\n            card.style.opacity = '0';\n        }, 900);\n    };\n};\n\nfunction cardAnimationOn() {\n    const currentCards = document.querySelectorAll('.toy-card');\n    let windowWidth = document.body.clientWidth;\n    for (let i = 0; i < currentCards.length; i++) {\n        const card = <HTMLElement>currentCards[i];\n        card.style.animationName = 'hlopOn';\n        setTimeout(() => { card.style.opacity = '1' }, 100);\n    };\n};\n\nexport { cardAnimationOf, cardAnimationOn };","import { PageRenderer } from './PageRenderer'\nimport { data } from '../../toyData';\nimport { ToyCard, IToyCard } from './ToyCard'\nimport { ToyCardsSort } from '../../services/sort'\nimport { ToyCardsFilter, IFilterShape, IFilterColor, IFilterSize } from '../../services/filter';\nimport { cardAnimationOf, cardAnimationOn } from '../../services/cardsAnimation';\nimport { RangeSlider } from '../../services/rangeSlider';\n\nlet ToyPage: PageRenderer = {\n    render: async () => {\n        let view =  /*html*/`\n        <div class=\"pop-up\">\n            <div class=\"pop-up__absent-toy\">\n            <div class=\"cross\" id=\"cross-absent-toy\">\n                <div class=\"cross-line\"></div>\n                <div class=\"cross-line\"></div>\n            </div>\n            <div class=\"absent-toy-text\">\n            <p id=\"pop-up-info\"></p>\n            <p id=\"pop-up-info-mini\"class=\"absent-toy-text-mini\"></p>\n            </div>\n            </div>\n        </div>\n        <div class=\"page toy-page\">\n            <div class=\"blur\">\n            \n                    <div class=\"controls\">\n                    <div class=\"filters\">\n                        <div class=\"controls-title\">\n                        Фильтры по значению\n                        </div>\n                        <div class=\"shape\">\n                            <p class=\"filters-text\">Форма:</p>\n                            <button class=\"shape-button\" data-filter=\"шар\"></button>\n                            <button class=\"shape-button\" data-filter=\"колокольчик\"></button>\n                            <button class=\"shape-button\" data-filter=\"шишка\"></button>\n                            <button class=\"shape-button\" data-filter=\"снежинка\"></button>\n                            <button class=\"shape-button\" data-filter=\"фигурка\"></button>\n                        </div>\n                        <div class=\"color\">\n                            <p class=\"filters-text\">Цвет:</p>\n                            <button class=\"color-button\" data-filter=\"белый\"></button>\n                            <button class=\"color-button\" data-filter=\"желтый\"></button>\n                            <button class=\"color-button\" data-filter=\"красный\"></button>\n                            <button class=\"color-button\" data-filter=\"синий\"></button>\n                            <button class=\"color-button\" data-filter=\"зелёный\"></button>\n                        </div>\n                        <div class=\"size\">\n                            <p class=\"filters-text\">Размер:</p>\n                            <button class=\"size-button\" data-filter=\"большой\"></button>\n                            <button class=\"size-button\" data-filter=\"средний\"></button>\n                            <button class=\"size-button\" data-filter=\"малый\"></button>\n                        </div>\n                        <div class=\"favorite-container\">\n                            <div class=\"input-wrap\">\n                                <p>Только отобранные: </p>\n                                <div class=\"form-group\">\n                                    <input type=\"checkbox\" class=\"favorite-input\" id=\"checkbox\">\n                                    <label for=\"checkbox\" class=\"favorite-input-label\"></label>\n                                </div>\n                            </div>\n                            <div class=\"input-wrap\">\n                                <p>Только любимые: </p>\n                                <div class=\"form-group\">\n                                    <input type=\"checkbox\" class=\"favorite-input\" id=\"checkbox-lovest\">\n                                    <label for=\"checkbox-lovest\" class=\"favorite-input-label\"></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"range\">\n                        <div class=\"controls-title\">Фильтры по диапазону</div>\n                        <div class=\"count\">\n                            <span class=\"control-span\">Количество экземпляров:</span>\n                            <maryanzh-range-slider id=\"range-slider-count\" minValue=\"1\" maxValue=\"12\" step=\"1\" lineWidth=\"300\" startValue=\"1\" endValue=\"12\" runerSize=\"20\"></maryanzh-range-slider>\n                            \n                            <span class=\"control-span\">Год приобретения:</span>\n                            <maryanzh-range-slider id=\"range-slider-year\" minValue=\"1940\" maxValue=\"2020\" step=\"10\" lineWidth=\"300\" startValue=\"1940\" endValue=\"2020\" runerSize=\"20\"></maryanzh-range-slider>\n                            <p class=\"range-text\">Для вашего удобства, фильтрация начинает работать после того, как вы отпустили бегунок</p>\n                        </div>                    \n                    </div>\n                    \n                    <div class=\"sort\">\n                        <div class=\"controls-title\">\n                        Сортировка\n                        </div>\n                        <select class=\"sort-select\">\n                            <option value=\"sort-name-max\">По названию от «А» до «Я»</option>\n                            <option  value=\"sort-name-min\">По названию от «Я» до «А»</option>\n                            <option value=\"sort-year-max\">По году по возрастанию</option>\n                            <option value=\"sort-year-min\">По году по убыванию</option>\n                        </select>\n                        <button class=\"reset\">Сброс фильтров</button>\n                    </div>\n                </div>\n                <div class=\"text-under-card\">\n                    <p id=\"count\"></p>\n                    <p class=\"text-under-card-info\">Для добавления или удаления игрушки в Отобранные нажмите на ее ихображение</p>\n                </div>\n                <div class=\"toy-card-container\">\n                    \n                </div>\n            </div>\n        </div>\n        `\n        return view\n    },\n\n    after_render: async () => {\n        const sortData = new ToyCardsSort(currentCardArr);\n        sortData.sortAtoZ();\n        cardRender(currentCardArr);\n\n        const select = <HTMLSelectElement>document.querySelector('.sort-select');\n        select.addEventListener('change', changeSelectSort);\n\n        const sharpButtons = document.querySelectorAll('.shape-button');\n        for (let i = 0; i < sharpButtons.length; i++) {\n            sharpButtons[i].addEventListener('click', filterOnClick);\n        };\n\n        const colorButtons = document.querySelectorAll('.color-button');\n        for (let i = 0; i < colorButtons.length; i++) {\n            colorButtons[i].addEventListener('click', filterOnClick);\n        };\n\n        const sizeButtons = document.querySelectorAll('.size-button');\n        for (let i = 0; i < sizeButtons.length; i++) {\n            sizeButtons[i].addEventListener('click', filterOnClick);\n        };\n\n        const checkbox = <HTMLInputElement>document.getElementById('checkbox');\n        checkbox.addEventListener('change', isFavoriteOnChange);\n        const checkboxLovest = <HTMLInputElement>document.getElementById('checkbox-lovest');\n        checkboxLovest.addEventListener('change', showLoveatOnChange);\n\n        const crossPopUpAbsentToy = <HTMLLIElement>document.querySelector('#cross-absent-toy');\n        crossPopUpAbsentToy.addEventListener('click', clpuseAbsentToyPopUpOnClick);\n\n        const reset = <HTMLInputElement>document.querySelector('.reset');\n        reset.addEventListener('click', resetFilterOnClick);\n\n        const countSlider = <RangeSlider>document.getElementById('range-slider-count');\n        const yearSlider = <RangeSlider>document.getElementById('range-slider-year');\n        countSlider.addEventListener('startValueChanged', upDateFilter);\n        countSlider.addEventListener('endValueChanged', upDateFilter);\n        yearSlider.addEventListener('startValueChanged', upDateFilter);\n        yearSlider.addEventListener('endValueChanged', upDateFilter);\n\n        const search = <HTMLInputElement>document.querySelector('.search');\n        search.style.opacity = '1';\n        search.addEventListener('change', searchValueOnCnange);\n    }\n};\n\n//текуший иассив карточек, обновляется при нажатии каждого фильтра\nlet currentCardArr: IToyCard[] = [];\nfor (let index = 0; index < data.length; index++) {\n    currentCardArr.push(data[index]);\n};\n//флаги, какие фильтры включены\nlet filterSharpArr: IFilterShape[] = [\n    {\n        shape: 'шар',\n        isOn: false,\n    },\n    {\n        shape: 'колокольчик',\n        isOn: false,\n    },\n    {\n        shape: 'шишка',\n        isOn: false,\n    },\n    {\n        shape: 'снежинка',\n        isOn: false,\n    },\n    {\n        shape: 'фигурка',\n        isOn: false,\n    },\n\n];\n\nlet filterColorArr: IFilterColor[] = [\n    {\n        color: 'белый',\n        isOn: false,\n    },\n    {\n        color: 'желтый',\n        isOn: false,\n    },\n    {\n        color: 'красный',\n        isOn: false,\n    },\n    {\n        color: 'синий',\n        isOn: false,\n    },\n    {\n        color: 'зелёный',\n        isOn: false,\n    },\n\n];\n\nlet filterSizeArr: IFilterSize[] = [\n    {\n        size: 'большой',\n        isOn: false\n    },\n    {\n        size: 'средний',\n        isOn: false\n    },\n    {\n        size: 'малый',\n        isOn: false\n    },\n];\n\n// редндеринг карточек\nfunction cardRender(cardsArr: IToyCard[]) {\n    cardAnimationOf();\n    const cards = document.querySelectorAll('.toy-card');\n    setTimeout(() => {\n        for (let i = 0; i < cards.length; i++) {\n            cards[i].remove()\n        }\n    }, 290);\n\n    let count: number = 0;\n    setTimeout(() => {\n        for (let i = 0; i < cardsArr.length; i++) {\n            count = count + 1;\n            const newCard: ToyCard = new ToyCard(cardsArr[i].num, cardsArr[i].name, cardsArr[i].count, cardsArr[i].year, cardsArr[i].shape, cardsArr[i].color, cardsArr[i].size,\n                cardsArr[i].favorite, cardsArr[i].lovest);\n            newCard.createCard();\n        }\n    }, 290)\n\n    setTimeout(cardAnimationOn, 320);\n    setTimeout(() => {\n        let curentToyCount = document.getElementById('count');\n        if (curentToyCount != undefined) {\n            let countToStr = count.toString();\n        curentToyCount.textContent = `Количество игрушек на странице ${countToStr}`;\n        }\n    }, 290)\n\n};\n\n//текущий селект\nlet currentSort = 'sort-name-max';\n// сортировка по селект\nfunction changeSelectSort() {\n    const select = <HTMLSelectElement>document.querySelector('.sort-select');\n    const optionValue: string = select.value;\n    const sortData = new ToyCardsSort(currentCardArr);\n    switch (optionValue) {\n        case 'sort-name-max':\n            sortData.sortAtoZ();\n            cardRender(currentCardArr);\n            currentSort = 'sort-name-max';\n            break;\n        case 'sort-name-min':\n            sortData.sortZtoA();\n            cardRender(currentCardArr);\n            currentSort = 'sort-name-min';\n            break;\n        case 'sort-year-max':\n            sortData.sortYearMax();\n            cardRender(currentCardArr);\n            currentSort = 'sort-year-max';\n            break;\n        case 'sort-year-min':\n            sortData.sortYearMin();\n            cardRender(currentCardArr);\n            currentSort = 'sort-year-min';\n            break;\n    }\n};\n// поределчем текущую сортировку на странице\nfunction whatSort() {\n    const sortData = new ToyCardsSort(currentCardArr);\n    switch (currentSort) {\n        case 'sort-name-max':\n            sortData.sortAtoZ();\n            break;\n        case 'sort-name-min':\n            sortData.sortZtoA();\n            break;\n        case 'sort-year-max':\n            sortData.sortYearMax();\n            break;\n        case 'sort-year-min':\n            sortData.sortYearMin();\n            break;\n    }\n};\n\n// фильтрация форма, цвет, размер\nlet isFavorite: boolean = false;\nlet isLovest: boolean = false;\nfunction isFavoriteOnChange(e: Event) {\n    let a = <HTMLInputElement>e.target;\n    isFavorite = a.checked;\n    filterOnClick(e);\n}\n\nfunction showLoveatOnChange(e: Event) {\n    let a = <HTMLInputElement>e.target;\n    isLovest = a.checked;\n    filterOnClick(e);\n}\n\nfunction addToFavoriteOnClick(e: Event) {\n\n    const toy = <HTMLElement>e.target;\n    const card = <HTMLLIElement>toy.parentNode;\n    const ribbon = <HTMLLIElement>card.lastChild;\n    const imgNumber = +(toy.dataset.number);\n    const cardData = data.find(d => +d.num == imgNumber);\n\n    let favoriteCount: number = 0;\n    for (let i = 0; i < data.length; i++) {\n        data[i].favorite ? favoriteCount++ : favoriteCount;\n    };\n\n    if (favoriteCount > 19 && cardData.favorite == false) {\n        openAbsentToyPopUpOn('Извините, все слоты заполнены', 'Вы можете добавить не более 20 игрущек');\n    }\n    else {\n        if (cardData.favorite) {\n            favoriteCount--;\n            cardData.favorite = false;\n            const favBall = <HTMLLIElement>ribbon.lastChild;\n            favBall.remove();\n            //card.style.background = 'rgba(31, 112, 127, .3';\n            ribbon.classList.remove('ribbon-favorite');\n            ribbon.classList.add('ribbon');\n            const favoriteFilter = <HTMLInputElement>document.getElementById('checkbox');\n            if (favoriteFilter.checked) {\n                //const favoriteCollection = document.querySelectorAll('.toy-card');\n\n                card.style.animationName = 'hlop';\n                setTimeout(() => { card.remove() }, 290);\n            }\n        }\n        else {\n            cardData.favorite = true;\n            favoriteCount++;\n            //card.style.background = 'rgba(31, 112, 127, .6';\n            ribbon.classList.remove('ribbon');\n            ribbon.classList.add('ribbon-favorite');\n            const favoriteBall = document.createElement('div');\n            favoriteBall.classList.add('ribbon-favorite-ball');\n            ribbon.append(favoriteBall);\n        }\n    };\n    const favoriteCountELem = document.getElementById('favorite-toy-count');\n    favoriteCountELem.textContent = favoriteCount.toString();\n    \n    if (isFavorite) {\n        const count = document.getElementById('count');\n        count.textContent = `Количество игрушек на странице ${favoriteCount}`;\n    }\n};\n\nfunction filterOnClick(e: Event) {\n    const elem = <HTMLElement>e.target;\n    const countSLider = <RangeSlider>document.getElementById('range-slider-count');\n    const yearSlider = <RangeSlider>document.getElementById('range-slider-year');\n    const countStartVal = +countSLider.startValue;\n    const countEndVal = +countSLider.endValue;\n    const yearStartVal = +yearSlider.startValue;\n    const yearEndVal = +yearSlider.endValue;\n\n    const filter = new ToyCardsFilter(data, filterSharpArr, filterColorArr, filterSizeArr, isFavorite, isLovest, countStartVal, countEndVal, yearStartVal, yearEndVal);\n    filter.filterAddShapeFlag(elem);\n    filter.filterAddColorFlag(elem);\n    filter.filterAddSizeFlag(elem);\n\n    filter.filterCardArr = [];\n    filter.createFilterArr(filterSharpArr, filterColorArr, filterSizeArr, isFavorite, isLovest, countStartVal, countEndVal, yearStartVal, yearEndVal);\n    currentCardArr = filter.filterCardArr;\n    whatSort();\n    cardRender(currentCardArr);\n};\n\nfunction upDateFilter() {\n    const countSLider = <RangeSlider>document.getElementById('range-slider-count');\n    const yearSlider = <RangeSlider>document.getElementById('range-slider-year');\n    const countStartVal = +countSLider.startValue;\n    const countEndVal = +countSLider.endValue;\n    const yearStartVal = +yearSlider.startValue;\n    const yearEndVal = +yearSlider.endValue;\n\n    const filter = new ToyCardsFilter(data, filterSharpArr, filterColorArr, filterSizeArr, isFavorite, isLovest, countStartVal, countEndVal, yearStartVal, yearEndVal);\n    filter.filterCardArr = [];\n    filter.createFilterArr(filterSharpArr, filterColorArr, filterSizeArr, isFavorite, isLovest, countStartVal, countEndVal, yearStartVal, yearEndVal);\n    currentCardArr = filter.filterCardArr;\n\n    whatSort();\n    cardRender(currentCardArr);\n};\n\nfunction resetFilterOnClick() {\n    function resetFilte() {\n        for (let i = 0; i < filterSharpArr.length; i++) {\n            filterSharpArr[i].isOn = false;\n        }\n        for (let i = 0; i < filterColorArr.length; i++) {\n            filterColorArr[i].isOn = false;\n        }\n        for (let i = 0; i < filterSizeArr.length; i++) {\n            filterSizeArr[i].isOn = false;\n        }\n    };\n    resetFilte();\n\n    function resetFilteStyle() {\n        const shapeFilterArr = document.querySelectorAll('.shape-button');\n        for (let i = 0; i < shapeFilterArr.length; i++) {\n            shapeFilterArr[i].removeAttribute('style');\n        };\n        const filterColorArr = document.querySelectorAll('.color-button');\n        for (let i = 0; i < filterColorArr.length; i++) {\n            filterColorArr[i].removeAttribute('style');\n        };\n        const filterSizeArr = document.querySelectorAll('.size-button');\n        for (let i = 0; i < filterSizeArr.length; i++) {\n            filterSizeArr[i].removeAttribute('style');\n        };\n    };\n    resetFilteStyle();\n    const checkbox = <HTMLInputElement>document.getElementById('checkbox');\n    const checkboxLovest = <HTMLInputElement>document.getElementById('checkbox-lovest');\n    checkbox.checked = false;\n    checkboxLovest.checked = false;\n    isFavorite = false;\n    isLovest = false;\n\n    const countSLider = <RangeSlider>document.getElementById('range-slider-count');\n    const yearSlider = <RangeSlider>document.getElementById('range-slider-year');\n    countSLider.startValue = countSLider.minValue;\n    countSLider.endValue = countSLider.maxValue;\n    yearSlider.startValue = yearSlider.minValue;\n    yearSlider.endValue = yearSlider.maxValue;\n\n    upDateFilter();\n};\n\nfunction openAbsentToyPopUpOn(a: string, b: string) {\n    const popUpAlert = <HTMLElement>document.querySelector('.pop-up__absent-toy');\n    const popUp = <HTMLLIElement>document.querySelector('.pop-up');\n    const alertText = <HTMLLIElement>document.querySelector('#pop-up-info');\n    alertText.textContent = a;\n    const alertTextMini = <HTMLLIElement>document.querySelector('#pop-up-info-mini');\n    alertTextMini.textContent = b;\n    popUp.style.display = 'flex';\n    popUp.style.animation = 'unHidden .3s';\n    setTimeout(() => {\n        popUp.style.opacity = '1';\n        popUpAlert.style.animation = 'up .3s';\n    }, 300);\n    setTimeout(() => { popUpAlert.style.marginTop = '0' }, 490)\n};\n\nfunction clpuseAbsentToyPopUpOnClick() {\n    const popUpAlert = <HTMLElement>document.querySelector('.pop-up__absent-toy');\n    const popUp = <HTMLLIElement>document.querySelector('.pop-up');\n    popUpAlert.style.animation = 'clouse .3s';\n    setTimeout(() => {\n        popUpAlert.style.marginTop = '-170vh';\n        popUp.style.animation = 'hidden .3s';\n    }, 200);\n    setTimeout(() => {\n        popUp.style.display = 'none';\n    }, 500);\n}\n\nfunction searchValueOnCnange() {\n    const search = <HTMLInputElement>document.querySelector('.search');\n    const value = search.value.toLowerCase();\n    if (value == '') {\n        upDateFilter()\n    }\n    else {\n\n        const result = currentCardArr.filter(elem => isTrueValue(elem));\n        function isTrueValue(elem: IToyCard) {\n            const name = elem.name.toLowerCase();\n            if (name.indexOf(value) > -1) {\n                return true;\n            }\n            else {\n                return false;\n            };\n\n        };\n        if (result.length > 0) {\n            currentCardArr = result;\n            cardRender(currentCardArr);\n        }\n        else {\n            openAbsentToyPopUpOn('Извините, совпадений не обнаружено', '');\n        }\n    }\n}\n\nexport { ToyPage, addToFavoriteOnClick, openAbsentToyPopUpOn, resetFilterOnClick };","class RangeSlider extends HTMLElement {\n    private startOutput: HTMLElement;\n    private endOutput: HTMLElement;\n    private startRunner: HTMLElement\n    private endRunner: HTMLElement;\n    private startLine: HTMLElement;\n    private endLine: HTMLElement;\n    private startValueChanged: Event;\n    private endValueChanged: Event;\n\n    private rendered = false;\n    // private leftRunerPosition: number;\n    // private rightRunerPosition: number;\n    // private leftLineWidth: number;\n    // private rightLineWidth: number;\n\n    private position: {\n        x: number,\n        y: number,\n        startValue: number,\n        endValue: number,\n        runner: HTMLElement\n    };\n\n    get lineWidth(): number {\n        return +this.getAttribute('linewidth');\n    }\n\n    set lineWidth(value: number) {\n        this.setAttribute('linewidth', value.toString());\n    }\n\n    get runnerSize(): number {\n        return +this.getAttribute('runersize');\n    }\n\n    set runnerSize(value: number) {\n        this.setAttribute('runersize', value.toString());\n    }\n\n    get step(): number {\n        return +this.getAttribute('step');\n    }\n\n    set step(value: number) {\n        this.setAttribute('step', value.toString());\n    }\n\n    get minValue(): number {\n        return +this.getAttribute('minvalue');\n    }\n\n    set minValue(value: number) {\n        if (value > this.maxValue) {\n            value = this.maxValue;\n        }\n        this.setAttribute('minvalue', value.toString());\n    }\n\n    get maxValue(): number {\n        return +this.getAttribute('maxvalue');\n    }\n\n    set maxValue(value: number) {\n        if (value < this.minValue) {\n            value = this.minValue;\n        }\n        this.setAttribute('maxvalue', value.toString());\n    }\n\n    get startValue(): number {\n        return +this.getAttribute('startvalue');\n    }\n\n    set startValue(value: number) {\n        if (value < this.minValue) {\n            value = this.minValue;\n        }\n        if (value > this.endValue) {\n            value = this.endValue;\n        }\n        this.setAttribute('startvalue', value.toString());\n    }\n\n    get endValue(): number {\n        return +this.getAttribute('endvalue');\n    }\n\n    set endValue(value: number) {\n        if (value > this.maxValue) {\n            value = this.maxValue;\n        }\n        if (value < this.startValue) {\n            value = this.startValue;\n        }\n        this.setAttribute('endvalue', value.toString());\n    }\n\n    static observedAttributes = [\n        'linewidth',\n        'runersize',\n        'step',\n        'minvalue',\n        'maxvalue',\n        'startvalue',\n        'endvalue'\n    ];\n\n\n    constructor() {\n        super();\n        this.startValueChanged = new Event('startValueChanged');\n        this.endValueChanged = new Event('endValueChanged');\n    }\n\n    connectedCallback() {\n        this.startOutput = document.createElement('output');\n        this.endOutput = document.createElement('output');\n        this.startRunner = document.createElement('div');\n        this.endRunner = document.createElement('div');\n        this.startLine = document.createElement('div');\n        this.endLine = document.createElement('div');\n\n        const sliderContaner = document.createElement('div');\n        sliderContaner.className = 'range-slider-contaner';\n        this.append(sliderContaner)\n\n        const rangeSliderLines = document.createElement('div');\n\n        this.startOutput.className = 'range-slider__output';\n        this.startOutput.textContent = this.minValue.toString();\n        rangeSliderLines.className = 'range-slider__range-line';\n        this.endOutput.className = 'range-slider__output';\n        this.endOutput.textContent = this.maxValue.toString();\n        sliderContaner.append(this.startOutput, rangeSliderLines, this.endOutput);\n\n        const linesContaner = document.createElement('div');\n        linesContaner.className = 'range-slider__range-line-cuntaner';\n        linesContaner.style.width = `${this.lineWidth}px`\n\n        this.startRunner.className = 'range-slider__runer-left';\n        this.startRunner.style.width = `${this.runnerSize}px`;\n        this.startRunner.style.height = `${this.runnerSize}px`;\n        this.startRunner.style.cursor = 'grab';\n        this.startRunner.addEventListener('mousedown', this.runnerOnMouseDown);\n\n        this.endRunner.className = 'range-slider__runer-right';\n        this.endRunner.style.width = `${this.runnerSize}px`;\n        this.endRunner.style.height = `${this.runnerSize}px`;\n        this.endRunner.style.cursor = 'grab';\n        this.endRunner.addEventListener('mousedown', this.runnerOnMouseDown);\n\n        rangeSliderLines.append(linesContaner, this.startRunner, this.endRunner);\n\n        this.startLine.className = 'range-slider__line';\n        this.endLine.className = 'range-slider__line';\n        linesContaner.append(this.startLine, this.endLine);\n\n        this.rendered = true;\n        this.update();\n    }\n\n    disconnectedCallback() {\n        // браузер вызывает этот метод при удалении элемента из документа\n        // (может вызываться много раз, если элемент многократно добавляется/удаляется)\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n        if (!this.rendered) {\n            return;\n        }\n        switch (name) {\n            case 'linewidth': {\n                this.onLineWidthChanged(+oldValue, +newValue);\n                break;\n            }\n            case 'runersize': {\n                this.onRunerSizeChanged(+oldValue, +newValue);\n                break;\n            }\n            case 'minvalue': {\n                this.onMinValueChanged(+oldValue, +newValue);\n                break;\n            }\n            case 'maxvalue': {\n                this.onMaxValueChanged(+oldValue, +newValue);\n                break;\n            }\n            case 'startvalue': {\n                this.onStartValueChanged(+oldValue, +newValue);\n                break;\n            }\n            case 'endvalue': {\n                this.onEndValueChanged(+oldValue, +newValue);\n                break;\n            }\n        }\n    }\n\n    private onLineWidthChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private onRunerSizeChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private onMinValueChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private onMaxValueChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private onStartValueChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private onEndValueChanged(oldValue: number, newValue: number) {\n        this.update();\n    }\n\n    private update() {\n\n        const delta = this.maxValue - this.minValue;\n        const startDx = this.startValue - this.minValue;\n        const endDx = this.endValue - this.minValue;\n\n        const leftCenter = this.lineWidth * (startDx / delta);\n        const rightCenter = this.lineWidth * (endDx / delta)\n\n        const leftRunnerMargin = leftCenter - this.runnerSize / 2;\n        \n        const rightRunnerMargin = rightCenter - this.runnerSize / 2;\n        const leftLineWidth = leftCenter + this.runnerSize/2;\n        const rightLineWidth = this.lineWidth - (rightCenter - this.runnerSize / 2);\n\n        this.startRunner.style.marginLeft = `${leftRunnerMargin}px`;\n        this.endRunner.style.marginLeft = `${rightRunnerMargin}px`;\n        this.startLine.style.width = `${leftLineWidth}px`;\n        this.endLine.style.width = `${rightLineWidth}px`;\n        if (leftRunnerMargin == 0 || leftRunnerMargin < this.runnerSize) {\n            this.startRunner.style.zIndex = '5';\n            this.endRunner.style.zIndex = '6';\n        }\n        if (rightRunnerMargin > (this.lineWidth - this.runnerSize)) {\n            this.startRunner.style.zIndex = '6';\n            this.endRunner.style.zIndex = '5';\n        }\n\n\n        if (this.step == undefined || this.step < 1) {\n            this.startOutput.textContent = Math.round(this.startValue).toString();\n            this.endOutput.textContent = Math.round(this.endValue).toString();\n        }\n        else {\n            this.startOutput.textContent = (Math.round(this.startValue / this.step) * this.step).toString();\n            this.endOutput.textContent = (Math.round(this.endValue / this.step) * this.step).toString();\n        };\n\n\n    }\n\n\n    private runnerOnMouseDown = (e: MouseEvent) => {\n        const runer = <HTMLElement>e.target;\n        runer.scrollTop = 100;\n        runer.scrollLeft = 150;\n\n        this.position = {\n            // Get the current mouse position\n            x: e.clientX,\n            y: e.clientY,\n            startValue: this.startValue,\n            endValue: this.endValue,\n            runner: runer\n        };\n\n        document.addEventListener('mousemove', this.runnerOnMouseMove);\n        document.addEventListener('mouseup', this.runnerOnMouseUp);\n\n        runer.style.cursor = 'grabbing';\n\n        runer.ondragstart = () => false;\n    }\n\n    private runnerOnMouseMove = (e: MouseEvent) => {\n        const runer = this.position.runner;\n        const dx = e.clientX - this.position.x;\n        let dv = (this.maxValue - this.minValue) * (dx / this.lineWidth);\n        if (this.step > 0) {\n            dv = Math.round(dv / this.step) * this.step;\n        }\n        if (runer == this.startRunner) {\n            this.startValue = this.position.startValue + dv;\n        }\n        else if (runer == this.endRunner) {\n            this.endValue = this.position.endValue + dv;\n        }\n\n        // let startValue: number = +this.startValue;\n        // let currentRunnerPos = startValue + dx - 10;\n        // currentRunnerPos < -10 ? currentRunnerPos = -10 : currentRunnerPos;\n        // currentRunnerPos > 290 ? currentRunnerPos = 290 : currentRunnerPos;\n        // this.startRunner.style.marginLeft = `${currentRunnerPos}px`;\n    }\n\n    private runnerOnMouseUp = (e: MouseEvent) => {\n        const runer = this.position.runner;\n        \n        document.removeEventListener('mousemove', this.runnerOnMouseMove);\n        document.removeEventListener('mouseup', this.runnerOnMouseUp);\n\n        runer.style.cursor = 'grab';\n        runer.style.removeProperty('user-select');\n        if (runer == this.startRunner) {\n            this.dispatchEvent(this.startValueChanged);\n        }\n        else if (runer == this.endRunner) {\n            this.dispatchEvent(this.endValueChanged);\n        }\n    };\n\n    adoptedCallback() {\n        // вызывается, когда элемент перемещается в новый документ\n        // (происходит в document.adoptNode, используется очень редко)\n    }\n\n\n};\n\n\n// (Math.random() * Number.MAX_SAFE_INTEGER).toFixed().toString();\nexport { RangeSlider };","import './views/styles/reset.css';\nimport './views/styles/global.css';\nimport './views/styles/media.css';\n\nimport { PageRenderer } from './views/pages/PageRenderer';\nimport { Header } from './views/components/header';\nimport { Footer } from './views/components/footer';\nimport { Error404 } from './views/pages/Error404';\nimport { StartPage } from './views/pages/startPage';\nimport { ToyPage, resetFilterOnClick } from './views/pages/toyPage';\nimport { TreePage } from './views/pages/treePage'\nimport { RangeSlider } from './services/rangeSlider'\n\ncustomElements.define(\"maryanzh-range-slider\", RangeSlider);\n\n//текущая страница\nlet currentPage = 'StartPage';\nconst historyPageArr: Array<string> = [];\n\n//фцнкция смены класса для новой страницы\nfunction changDataPage(dataPage: string) {\n    //получили main\n    const page = document.getElementById('main');\n    // получили название текущей страницы из data\n    let pageName = page.dataset.page;\n    historyPageArr.push(pageName);\n    page.dataset.page = dataPage;\n}\n\nconst routes = new Map<string, PageRenderer>([\n    ['StartPage', StartPage],\n    ['ToyPage', ToyPage],\n    ['TreePage', TreePage],\n    ['Error404', Error404]\n]);\n\nasync function router() {\n    const header = null || document.getElementById('header');\n    const pageContent = null || document.getElementById('main');\n    const footer = null || document.getElementById('footer');\n\n    header.innerHTML = await Header.render();\n    await Header.after_render();\n    footer.innerHTML = await Footer.render();\n    await Footer.after_render();\n\n    let page = routes.has(currentPage) ? routes.get(currentPage) : Error404;\n    pageContent.innerHTML = await page.render();\n\n    await page.after_render();\n    changDataPage(currentPage);\n};\n\nasync function navToPage (page: string) {\n    currentPage = page;\n    await router();\n};\n\n//добавляем слушатель событий\nwindow.addEventListener('load', windowsOnLoad);\nasync function windowsOnLoad() {\n    await router();\n};\n\nexport { navToPage, currentPage };\n\n// console.log(`\n// Самооценка 188/200:\n// Вёрстка страниц приложения и навигация между ними +30\n// стартовая страница содержит название приложения и кнопку \"Начать игру\" или аналогичную. Выполняются требования к вёрстке \n// +8 нет адаптива у правой колонки с настройками\n// на странице с ёлкой есть меню с настройками, слоты с добавленными в избранное игрушками, ёлка. Выполняются требования к вёрстке \n// +10\n// в header приложения есть навигация, которая позволяет с каждой страницы приложения перейти на две другие страницы \n// +10\n\n// Меню с настройками +50\n// У пользователя есть возможность:\n// выбрать один из нескольких (минимум 8) фонов \n// +10\n// выбрать одну из нескольких (минимум 4) ёлок \n// +10\n// включить/отключить падающий снег \n// +10\n// включить/отключить новогоднюю музыку \n// +10\n// выбранные настройки сохраняются в local storage и отображаются при перезагрузке страницы. Если музыка сохранилась включённой, она начинает играть при первом клике. Есть кнопка сброса настроек, которая очищает local storage +10\n// 0 нет\n\n// Гирлянда +40\n// Гирлянда Для запуска гирлянды необходимо нажать на лампочку, количество цветов на гирлянде соответсвует выбранным фонарикам.\n// При трех вбранных фонариках и выше, цвета лампочек перемешиваются. \n// Гирлянда реализуется средствами css без использования изображений\n// Гирлянда на ёлку добавляется динамически средствами JavaScript (на кросс-чеке этот пункт не проверяется)\n// У пользователя есть возможность:\n// добавить на ёлку мерцающую разноцветную гирлянду\n//  +20\n// выбрать один из нескольких (минимум 4) цветов лампочек гирлянды или оставить её разноцветной \n// +10\n// внешний вид гирлянды соответствует предложенному образцу или является его улучшенной версией\n//  +10\n\n// Игрушки в избранном +80\n// в слотах находятся игрушки, которые были добавлены в избранное на странице с игрушками \n// +10\n// если в избранное не была добавлена ни одна игрушка, в слотах отображаются первые 20 игрушек коллекции исходных данных \n// +10\n\n// игрушки из слотов с игрушками можно перетянуть на ёлку используя drag and drop +10\n// +10\n// если в процессе перетягивания игрушку отпускают за пределами ёлки, она возвращается в свой слот \n// +10\n// повешенные на ёлку игрушки можно перетягивать в пределах ёлки \n// +10\n\n// повешенные на ёлку игрушки можно снимать с ёлки, при этом они возвращаются в свой слот +10\n// 0 нет\n// возле слота с каждой игрушкой указывается количество игрушек в слоте равное количеству экземпляров игрушки в массиве с исходными данными \n// +10\n// когда игрушку \"вешают на ёлку\" количество игрушек в слоте уменьшается, когда игрушку \"снимают с ёлки\", количество игрушек в слоте увеличивается, когда все экземпляры игрушки помещаются на ёлку, отображается пустой слот \n// слот специально полупрозрачный, что бы было понятно, какая игрушка закончилась\n// +10\n\n\n// Дополнительный функционал на выбор +20\n// есть кнопка \"Сохранить\" при клике по которой текущее состояние страницы с ёлкой сохраняется в local storage, изображение ёлки с размещёнными на ней игрушками добавляется в секцию \"Вы нарядили\". При клике по карточкам из этой секции восстанавливается состояние страницы с ёлкой на момент сохранения +10\n// 0 нет\n// -Если игрушки добавлены не во все слоты, то можно вызвать окно с игшрушками, в нем видно, какие еще игрушки есть, на месте  выбранных, -- пустые слоты.\n// пока в разработке возможность добавить в пустые слоты игрушки прямо со страницы елки\n// -Можно выбрать раные мелодии. Мелодия проигрывается одна по кругу.\n// - Каждый огонек гирлянды мигает с рендомным интервалом\n// - Анимация шариков фона на стартовой странице\n// - Поле поиска убирается со стартовой страницы и страницы елки, т.к. не имет там смысла\n// +10\n// `);","let Footer = {\n    render: async () => {\n        let view =  /*html*/`\n            <div class=\"footer-wrap\">\n                <div class=\"footer-info\">\n                    <p class=\"footer-text\">©</p>\n                    <p class=\"footer-text\">2021</p>\n                    <a class=\"footer-text username\" href=\"https://github.com/MaryAnzh\" target=\"_blank\">MaryAnzh</a>\n                </div>\n                <a class=\"rss-logo\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noopener noreferrer\"></a>\n            </div>\n        `\n        return view\n    },\n    after_render: async () => { }\n\n}\n\nexport { Footer };"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","data","num","name","count","year","shape","color","size","favorite","lovest","StartPage","render","after_render","document","getElementById","addEventListener","startButtonOnClick","style","opacity","e","pagename","target","dataset","page","ball1","querySelector","marginTop","transition","ball2","heading","button","setTimeout","navToPage","TreePage","treeSVG1","src","currentAudioTrak","audioOnClick","onchange","selectTrackOnChange","addSnowOnClick","currentToyImgCollection","toyCountInfo","imgCollection","i","length","push","firTreeIconCollection","querySelectorAll","elem","firTreeIconNumber","onclick","changeFirTreeOnClick","currentTreeImgNumber","backgroundColor","backgroundCollectionWrap","createDivBGCollection","fairyLightIcons","index","addFairyLightOnClick","background","currentBgImgNumber","toySet","createDivToyImgCollection","hiddenToy","hiddenToySlotNum","createDivAllToyCollection","treeContour","imgDragOver","imgDrop","toyImgSet","imgOnDragStart","isHiddenFormOpen","parent","newElemClass","newElem","createElement","classList","add","imgNumber","number","toString","backgroundImage","changeBgOnClick","append","collection","elemCount","elemImg","draggable","id","type","textContent","toyCorntInfo","toyNum","toyCount","currentToyCount","satImgNum","imgIndex","p","onmouseover","onmouseout","remove","unHiddenAllToyCollection","closeButton","addItrmToSlotButton","firTreeIconCollrction","removeAttribute","elemNumber","bgCollection","j","bgNumber","hidden","isAudioPlay","audioElem","pause","play","value","createSnowFlake","zIndex","game","snow_flake","left","Math","random","animationDurationTime","animationDuration","widthHightSnow","width","height","id1","id2","isSnowDown","clearTimeout","snowflake","snowSetInterval1","setInterval","snowSetInterval2","colorFairyLight","isOn","colorValue","addFairyLightOnTree","radiusLine","firTree","fairyLightLine","itemCount","radius","colorSet","fairyLight","radian","PI","x","cos","y","sin","marginLeft","lightTime","oneColor","animation","twoColor","threeColor","floor","foorColor","fiveColor","remuvElem","elemIndex","isFairyLightOn","fairyLightLineCount","ev","targetElem","dataTransfer","effectAllowed","setData","getAttribute","preventDefault","currentImgZIndex","imgTreeId","console","log","area","dragImgSrc","getData","dragImgId","dragElem","toyType","toyNumber","elemmarginLeft","offsetX","imgWidth","elemmarginTop","offsetY","srcImgCount","countInfoArr","imgNum","countElem","img","checkedElem","checkToyQuantity","alert","distImg","top","navToPageOnClick","currentPage","audioIcon","resetSetting","blur2","blur","Error404","ToyCard","constructor","this","createCard","perant","card","cardImg","alt","addToFavoriteOnClick","cardDescription","addDescriptionP","isLovestString","ribbon","favoriteBall","className","content","span","ToyCardsSort","cardArray","sortAtoZ","sort","a","b","sortZtoA","sortYearMax","sortYearMin","ToyCardsFilter","filterShapeFlagArr","filterColorArr","filterSizeArr","filterFavorite","filterLovest","filterCountStart","filterCountEnd","filterYearStart","filterYearEnd","filterCardArr","filterAddShapeFlag","sortType","filter","filterAddColorFlag","outline","filterAddSizeFlag","createFilterArr","shapeFlag","colorFlag","sizeFlag","isFavorite","isLovest","countStartValue","countEndValue","yearStartValue","yearEndValue","filterShapes","filterColors","filterSizes","arr","isTrueCard","openAbsentToyPopUpOn","filterArr1","filterArr2","filterArr3","favorit","fCountStart","fCountEnd","fYearStart","fYearEnd","isShapeTrue","isColorTrue","isSizeTrue","isFavoriteTrue","isLovestTrue","isCountTrue","isYearTrue","elemYear","cardAnimationOn","currentCards","body","clientWidth","animationName","ToyPage","currentCardArr","cardRender","changeSelectSort","sharpButtons","filterOnClick","colorButtons","sizeButtons","isFavoriteOnChange","showLoveatOnChange","clpuseAbsentToyPopUpOnClick","resetFilterOnClick","countSlider","yearSlider","upDateFilter","search","searchValueOnCnange","filterSharpArr","cardsArr","cardAnimationOf","cards","curentToyCount","undefined","countToStr","currentSort","optionValue","sortData","whatSort","checked","toy","parentNode","lastChild","cardData","find","d","favoriteCount","countSLider","countStartVal","startValue","countEndVal","endValue","yearStartVal","yearEndVal","resetFilte","shapeFilterArr","resetFilteStyle","checkbox","checkboxLovest","minValue","maxValue","popUpAlert","popUp","display","toLowerCase","result","isTrueValue","indexOf","RangeSlider","HTMLElement","super","rendered","runnerOnMouseDown","runer","scrollTop","scrollLeft","position","clientX","clientY","runner","runnerOnMouseMove","runnerOnMouseUp","cursor","ondragstart","dx","dv","lineWidth","step","round","startRunner","endRunner","removeEventListener","removeProperty","dispatchEvent","startValueChanged","endValueChanged","Event","setAttribute","runnerSize","connectedCallback","startOutput","endOutput","startLine","endLine","sliderContaner","rangeSliderLines","linesContaner","update","disconnectedCallback","attributeChangedCallback","oldValue","newValue","onLineWidthChanged","onRunerSizeChanged","onMinValueChanged","onMaxValueChanged","onStartValueChanged","onEndValueChanged","delta","startDx","endDx","leftCenter","rightCenter","leftRunnerMargin","rightRunnerMargin","leftLineWidth","rightLineWidth","adoptedCallback","observedAttributes","customElements","define","historyPageArr","routes","Map","router","header","pageContent","footer","innerHTML","has","dataPage","pageName","changDataPage","window"],"sourceRoot":""}